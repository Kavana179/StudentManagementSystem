name: SonarCloud Analysis with Coverage

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: windows-latest

    steps:
    # Step 1: Checkout the code
    - name: Checkout repository
      uses: actions/checkout@v2

    # Step 2: Set up .NET SDK
    - name: Set up .NET SDK
      uses: actions/setup-dotnet@v2
      with:
        dotnet-version: '7.x'

    # Step 3: Install SonarScanner for MSBuild
    - name: Install SonarScanner for MSBuild
      run: |
        dotnet tool install --global dotnet-sonarscanner

    # Step 4: Install Coverlet global tool for code coverage
    - name: Install Coverlet global tool
      run: |
        dotnet tool install --global coverlet.console --version 3.1.0

    # Step 5: Clean and rebuild the solution
    - name: Clean and rebuild the solution
      run: |
        dotnet clean StudentManagementSystem.sln
        dotnet build StudentManagementSystem.sln

    # Step 6: Begin SonarCloud analysis with explicit working directory
    - name: Begin SonarCloud analysis
      run: |
        dotnet sonarscanner begin /k:"Kavana179_StudentManagementSystem" /o:"kavana179" /d:sonar.login="${{ secrets.SONAR_TOKEN }}" /s:"StudentManagementSystem.sln" /d:sonar.cs.vscoveragexml.reportsPaths="**/coverage.opencover.xml"
      working-directory: ./ # Ensure the working directory is set to the root of the repository

    # Step 7: Run tests and collect code coverage
    - name: Run tests and collect code coverage
      run: |
        dotnet test StudentManagementSystem.sln /p:CollectCoverage=true /p:CoverletOutputFormat=opencover /p:CoverletOutput=./TestResults/
      working-directory: ./ # Ensure the working directory is set to the root of the repository

    # Step 8: End SonarCloud analysis with explicit working directory
    - name: End SonarCloud analysis
      run: |
        dotnet sonarscanner end /d:sonar.login="${{ secrets.SONAR_TOKEN }}"
      working-directory: ./ # Ensure the working directory is set to the root of the repository
